name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_NAME: jeiferson/rinha-backend-2025

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        platform: 
          - { name: "amd64", dockerfile: "Dockerfile" }
          - { name: "arm64", dockerfile: "Dockerfile_arm64" }

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch,suffix=-${{ matrix.platform.name }}
          type=ref,event=pr,suffix=-${{ matrix.platform.name }}
          type=semver,pattern={{version}},suffix=-${{ matrix.platform.name }}
          type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.platform.name }}
          type=semver,pattern={{major}},suffix=-${{ matrix.platform.name }}
          type=raw,value=latest-${{ matrix.platform.name }},enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.platform.dockerfile }}
        platforms: linux/${{ matrix.platform.name }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=${{ matrix.platform.name }}
        cache-to: type=gha,mode=max,scope=${{ matrix.platform.name }}